definitions:
  appliedTo_dtos_user_dtos.UserModifyDto:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      isAccount:
        type: boolean
      lastName:
        type: string
    type: object
  appliedTo_dtos_user_dtos.UserPublicDto:
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      isAccount:
        type: boolean
      lastName:
        type: string
    type: object
  appliedTo_dtos_user_dtos.UserResponseDto:
    properties:
      created:
        example: "2025-07-27T12:00:00Z"
        type: string
      email:
        example: john@example.com
        type: string
      firstName:
        example: John
        type: string
      id:
        example: 1
        type: integer
      lastName:
        example: Doe
        type: string
    type: object
info:
  contact: {}
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Creates a new user with the provided name and email. Ensures the
        email is unique.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/appliedTo_dtos_user_dtos.UserPublicDto'
      produces:
      - application/json
      responses:
        "200":
          description: User created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid input or email already in use
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Could not create user
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Remove the user from the database by providing the user-ID.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted modified.
        "400":
          description: Invalid ID format
        "500":
          description: Could not delete user
      summary: Delete a user.
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get detailed information about a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/appliedTo_dtos_user_dtos.UserResponseDto'
        "400":
          description: Invalid ID format
        "404":
          description: Database query failed
      summary: Get a user by ID
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Modify user user data by providing new data and the user-ID.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/appliedTo_dtos_user_dtos.UserModifyDto'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully modified.
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid ID format
        "404":
          description: Database query failed
      summary: Modify a user.
      tags:
      - user
swagger: "2.0"
